// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop_Api.AppDbContext;

#nullable disable

namespace Shop_Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Shop_Models.Entities.Anh", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChiTietSanPhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Guid");

                    b.HasIndex("ChiTietSanPhamId");

                    b.ToTable("Anh");
                });

            modelBuilder.Entity("Shop_Models.Entities.ChatLieu", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaChatLieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChatLieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.ToTable("ChatLieu");
                });

            modelBuilder.Entity("Shop_Models.Entities.ChiTietKhuyenMai", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChiTietSanPhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KhuyenMaiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietSanPhamId");

                    b.HasIndex("KhuyenMaiId");

                    b.ToTable("ChiTietKhuyenMai");
                });

            modelBuilder.Entity("Shop_Models.Entities.ChiTietSanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChatLieuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("GiaBan")
                        .HasColumnType("float");

                    b.Property<double?>("GiaNhap")
                        .HasColumnType("float");

                    b.Property<double?>("GiaThucTe")
                        .HasColumnType("float");

                    b.Property<Guid?>("LoaiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaSanPham")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MauSacId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SanPhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SoLuongDaBan")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<Guid?>("ThuongHieuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThaiKhuyenMai")
                        .HasColumnType("int");

                    b.Property<Guid?>("XuatXuId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ChatLieuId");

                    b.HasIndex("LoaiId");

                    b.HasIndex("MauSacId");

                    b.HasIndex("SanPhamId");

                    b.HasIndex("ThuongHieuId");

                    b.HasIndex("XuatXuId");

                    b.ToTable("ChiTietSanPham");

                    b.HasData(
                        new
                        {
                            Id = new Guid("82f8ab51-cf2a-40a9-ab0d-f80d2316889b"),
                            GiaBan = 328580.0,
                            GiaNhap = 940495.0,
                            GiaThucTe = 932171.0,
                            MaSanPham = "SP2",
                            Mota = "mo ta2",
                            SoLuongDaBan = 8,
                            SoLuongTon = 4,
                            TrangThai = 0,
                            TrangThaiKhuyenMai = 1
                        },
                        new
                        {
                            Id = new Guid("b4369cf7-90a7-4c5e-8055-6f4c6883d65b"),
                            GiaBan = 914111.0,
                            GiaNhap = 912974.0,
                            GiaThucTe = 841163.0,
                            MaSanPham = "SP2",
                            Mota = "mo ta3",
                            SoLuongDaBan = 5,
                            SoLuongTon = 8,
                            TrangThai = 1,
                            TrangThaiKhuyenMai = 0
                        },
                        new
                        {
                            Id = new Guid("e69656b2-9cff-4108-87fd-96b72b5c444d"),
                            GiaBan = 519281.0,
                            GiaNhap = 259129.0,
                            GiaThucTe = 551145.0,
                            MaSanPham = "SP3",
                            Mota = "mo ta1",
                            SoLuongDaBan = 2,
                            SoLuongTon = 1,
                            TrangThai = 1,
                            TrangThaiKhuyenMai = 0
                        },
                        new
                        {
                            Id = new Guid("6bf0e746-a1cd-46af-8a5a-ef31a0146ed9"),
                            GiaBan = 550439.0,
                            GiaNhap = 494166.0,
                            GiaThucTe = 995581.0,
                            MaSanPham = "SP5",
                            Mota = "mo ta3",
                            SoLuongDaBan = 1,
                            SoLuongTon = 2,
                            TrangThai = 0,
                            TrangThaiKhuyenMai = 0
                        },
                        new
                        {
                            Id = new Guid("a0165caa-1439-44d0-8f5b-da6361e268f9"),
                            GiaBan = 817778.0,
                            GiaNhap = 628824.0,
                            GiaThucTe = 582753.0,
                            MaSanPham = "SP1",
                            Mota = "mo ta2",
                            SoLuongDaBan = 8,
                            SoLuongTon = 3,
                            TrangThai = 0,
                            TrangThaiKhuyenMai = 0
                        });
                });

            modelBuilder.Entity("Shop_Models.Entities.ChucVu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaChucVu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TenChucVu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Shop_Models.Entities.GioHang", b =>
                {
                    b.Property<Guid>("IdNguoiDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NguoiDungId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdNguoiDung");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("GioHang");
                });

            modelBuilder.Entity("Shop_Models.Entities.GioHangChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChiTietSanPhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("GiaBan")
                        .HasColumnType("float");

                    b.Property<double>("GiaGoc")
                        .HasColumnType("float");

                    b.Property<Guid>("GioHangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietSanPhamId");

                    b.HasIndex("GioHangId");

                    b.ToTable("GioHangChiTiet");
                });

            modelBuilder.Entity("Shop_Models.Entities.HoaDon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChiGiaoHang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiDoHuy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaHoaDon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayGiaoDuKien")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayNhan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayShip")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NguoiDungId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhachHang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TienGiam")
                        .HasColumnType("float");

                    b.Property<double>("TienShip")
                        .HasColumnType("float");

                    b.Property<double>("TongTien")
                        .HasColumnType("float");

                    b.Property<int>("TrangThaiGiaoHang")
                        .HasColumnType("int");

                    b.Property<int>("TrangThaiThanhToan")
                        .HasColumnType("int");

                    b.Property<Guid?>("VoucherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("NguoiDungId");

                    b.HasIndex("VoucherId");

                    b.ToTable("HoaDon");

                    b.HasData(
                        new
                        {
                            Id = new Guid("293a31d2-28f2-4a4b-b3ad-73d1e67b30f9"),
                            LiDoHuy = "ly do huy1",
                            MaHoaDon = "HD5",
                            MoTa = "mo ta2",
                            NgayGiaoDuKien = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayNhan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayShip = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayThanhToan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TienGiam = 70866.0,
                            TienShip = 41974.0,
                            TongTien = 90655.0,
                            TrangThaiGiaoHang = 1,
                            TrangThaiThanhToan = 1
                        },
                        new
                        {
                            Id = new Guid("2208cf49-19fb-46ec-becd-59c2aeef6d49"),
                            LiDoHuy = "ly do huy5",
                            MaHoaDon = "HD5",
                            MoTa = "mo ta1",
                            NgayGiaoDuKien = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayNhan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayShip = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayThanhToan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TienGiam = 64670.0,
                            TienShip = 24421.0,
                            TongTien = 99281.0,
                            TrangThaiGiaoHang = 1,
                            TrangThaiThanhToan = 0
                        },
                        new
                        {
                            Id = new Guid("0aeeda2f-7c73-40ec-b5d5-0681f435c2da"),
                            LiDoHuy = "ly do huy4",
                            MaHoaDon = "HD2",
                            MoTa = "mo ta2",
                            NgayGiaoDuKien = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayNhan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayShip = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayThanhToan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TienGiam = 90214.0,
                            TienShip = 24073.0,
                            TongTien = 132137.0,
                            TrangThaiGiaoHang = 0,
                            TrangThaiThanhToan = 1
                        },
                        new
                        {
                            Id = new Guid("b4548276-2a45-4ce9-84c9-119920b356fa"),
                            LiDoHuy = "ly do huy5",
                            MaHoaDon = "HD5",
                            MoTa = "mo ta3",
                            NgayGiaoDuKien = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayNhan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayShip = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayThanhToan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TienGiam = 41073.0,
                            TienShip = 29589.0,
                            TongTien = 103344.0,
                            TrangThaiGiaoHang = 1,
                            TrangThaiThanhToan = 0
                        },
                        new
                        {
                            Id = new Guid("78e2507c-35d3-4257-a50d-8c74a57c3288"),
                            LiDoHuy = "ly do huy3",
                            MaHoaDon = "HD1",
                            MoTa = "mo ta1",
                            NgayGiaoDuKien = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayNhan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayShip = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayThanhToan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TienGiam = 97160.0,
                            TienShip = 16459.0,
                            TongTien = 125386.0,
                            TrangThaiGiaoHang = 1,
                            TrangThaiThanhToan = 1
                        });
                });

            modelBuilder.Entity("Shop_Models.Entities.HoaDonChiTiet", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChiTietSanPhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("GiaBan")
                        .HasColumnType("float");

                    b.Property<Guid>("HoaDonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.HasIndex("ChiTietSanPhamId");

                    b.HasIndex("HoaDonId");

                    b.ToTable("HoaDonChiTiet");
                });

            modelBuilder.Entity("Shop_Models.Entities.Khuyenmai", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoaiHinhKhuyenMai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaKhuyenMai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MucGiam")
                        .HasColumnType("float");

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenKhuyenMai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Khuyenmai");
                });

            modelBuilder.Entity("Shop_Models.Entities.Loai", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaLoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Loai");
                });

            modelBuilder.Entity("Shop_Models.Entities.MauSac", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaMauSac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMauSac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.ToTable("MauSac");
                });

            modelBuilder.Entity("Shop_Models.Entities.NguoiDung", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool?>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MaNguoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNguoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("VerificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VerificationCodeExpiry")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Shop_Models.Entities.PhuongThucThanhToan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaPTThanhToan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMaPTThanhToan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PhuongThucThanhToan");
                });

            modelBuilder.Entity("Shop_Models.Entities.PhuongThucTTChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HoaDonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PTTToanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PhuongThucThanhToanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("SoTien")
                        .HasColumnType("float");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HoaDonId");

                    b.HasIndex("PhuongThucThanhToanId");

                    b.ToTable("PhuongThucTTChiTiet");
                });

            modelBuilder.Entity("Shop_Models.Entities.SanPham", b =>
                {
                    b.Property<Guid>("IdSanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaSanPham")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSanPham")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdSanPham");

                    b.ToTable("SanPham");

                    b.HasData(
                        new
                        {
                            IdSanPham = new Guid("db8242e6-0bb5-4bcd-82f0-3dbc4c06043d"),
                            MaSanPham = "SP1",
                            TenSanPham = "TSP2",
                            TrangThai = 0
                        },
                        new
                        {
                            IdSanPham = new Guid("89d8f2fa-f40d-4e0e-95dd-62a76fa04365"),
                            MaSanPham = "SP4",
                            TenSanPham = "TSP1",
                            TrangThai = 0
                        },
                        new
                        {
                            IdSanPham = new Guid("42155eb0-e16b-4153-a8c9-9461a9f5d5aa"),
                            MaSanPham = "SP5",
                            TenSanPham = "TSP2",
                            TrangThai = 1
                        },
                        new
                        {
                            IdSanPham = new Guid("d2654b8e-1e30-471b-9ff3-252fe258f423"),
                            MaSanPham = "SP5",
                            TenSanPham = "TSP3",
                            TrangThai = 1
                        },
                        new
                        {
                            IdSanPham = new Guid("0c5fcf83-f47b-46cb-b4da-32520c89e38f"),
                            MaSanPham = "SP5",
                            TenSanPham = "TSP1",
                            TrangThai = 0
                        });
                });

            modelBuilder.Entity("Shop_Models.Entities.SanPhamYeuThich", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChiTietSanPhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NguoiDungId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietSanPhamId");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("SanPhamYeuThich");
                });

            modelBuilder.Entity("Shop_Models.Entities.ThongKe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChiTietSanPhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HoaDonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Nam")
                        .HasColumnType("int");

                    b.Property<int>("Ngay")
                        .HasColumnType("int");

                    b.Property<Guid>("SanPhamChiTietId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Thang")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietSanPhamId");

                    b.HasIndex("HoaDonId");

                    b.ToTable("ThongKe");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f273b63b-9e1f-46ee-b9c6-f91e83bf9545"),
                            HoaDonId = new Guid("a072d595-d958-4a37-b7e9-fff60796f3bc"),
                            Nam = 2015,
                            Ngay = 3,
                            SanPhamChiTietId = new Guid("3f3739f9-7965-4750-933c-da2cc216f45a"),
                            Thang = 10,
                            TrangThai = 0
                        },
                        new
                        {
                            Id = new Guid("3e58d91f-056d-4cc3-ad61-50e9c15e91b5"),
                            HoaDonId = new Guid("6bf6b4fa-40e2-45a2-8fda-3642a18fa2a6"),
                            Nam = 2020,
                            Ngay = 24,
                            SanPhamChiTietId = new Guid("014decc6-6302-4c5c-888f-70a111f813fd"),
                            Thang = 4,
                            TrangThai = 0
                        },
                        new
                        {
                            Id = new Guid("c2678717-39b5-41e6-97c8-ed5d2a9630cb"),
                            HoaDonId = new Guid("a1749dee-e05e-42b2-8ec5-2f593bc49e72"),
                            Nam = 2008,
                            Ngay = 27,
                            SanPhamChiTietId = new Guid("63736132-db68-4e3b-b0c1-c752a4a91584"),
                            Thang = 12,
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("ab4b6507-61ce-420e-bb40-61509184dabe"),
                            HoaDonId = new Guid("8d614bb9-0105-4d38-95d4-b89aea185d93"),
                            Nam = 2018,
                            Ngay = 8,
                            SanPhamChiTietId = new Guid("51e8eb44-7cec-44e8-81d5-d3895da94cb5"),
                            Thang = 12,
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("f86787fb-4044-41c2-bfb1-8d23a78aff83"),
                            HoaDonId = new Guid("e97129bc-b754-4d8a-b4ed-7ed25bc8b927"),
                            Nam = 2008,
                            Ngay = 11,
                            SanPhamChiTietId = new Guid("b69c1b0a-bcd4-4347-beef-67be43f5e252"),
                            Thang = 10,
                            TrangThai = 0
                        });
                });

            modelBuilder.Entity("Shop_Models.Entities.ThuongHieu", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaThuongHieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenThuongHieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.ToTable("ThuongHieu");
                });

            modelBuilder.Entity("Shop_Models.Entities.Voucher", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaVoucher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PhanTramGiam")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenVoucher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.ToTable("Voucher");
                });

            modelBuilder.Entity("Shop_Models.Entities.XuatXu", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaXuatXu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenXuatXu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.ToTable("XuatXu");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Shop_Models.Entities.ChucVu", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Shop_Models.Entities.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Shop_Models.Entities.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Shop_Models.Entities.ChucVu", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop_Models.Entities.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Shop_Models.Entities.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shop_Models.Entities.Anh", b =>
                {
                    b.HasOne("Shop_Models.Entities.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany("Anhs")
                        .HasForeignKey("ChiTietSanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");
                });

            modelBuilder.Entity("Shop_Models.Entities.ChiTietKhuyenMai", b =>
                {
                    b.HasOne("Shop_Models.Entities.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany()
                        .HasForeignKey("ChiTietSanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop_Models.Entities.Khuyenmai", "Khuyenmai")
                        .WithMany("ChiTietKhuyenMais")
                        .HasForeignKey("KhuyenMaiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");

                    b.Navigation("Khuyenmai");
                });

            modelBuilder.Entity("Shop_Models.Entities.ChiTietSanPham", b =>
                {
                    b.HasOne("Shop_Models.Entities.ChatLieu", "ChatLieu")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("ChatLieuId");

                    b.HasOne("Shop_Models.Entities.Loai", "Loai")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("LoaiId");

                    b.HasOne("Shop_Models.Entities.MauSac", "MauSac")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("MauSacId");

                    b.HasOne("Shop_Models.Entities.SanPham", "SanPham")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("SanPhamId");

                    b.HasOne("Shop_Models.Entities.ThuongHieu", "ThuongHieu")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("ThuongHieuId");

                    b.HasOne("Shop_Models.Entities.XuatXu", "XuatXu")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("XuatXuId");

                    b.Navigation("ChatLieu");

                    b.Navigation("Loai");

                    b.Navigation("MauSac");

                    b.Navigation("SanPham");

                    b.Navigation("ThuongHieu");

                    b.Navigation("XuatXu");
                });

            modelBuilder.Entity("Shop_Models.Entities.GioHang", b =>
                {
                    b.HasOne("Shop_Models.Entities.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("NguoiDungId");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("Shop_Models.Entities.GioHangChiTiet", b =>
                {
                    b.HasOne("Shop_Models.Entities.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("ChiTietSanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop_Models.Entities.GioHang", "GioHang")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("GioHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");

                    b.Navigation("GioHang");
                });

            modelBuilder.Entity("Shop_Models.Entities.HoaDon", b =>
                {
                    b.HasOne("Shop_Models.Entities.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("NguoiDungId");

                    b.HasOne("Shop_Models.Entities.Voucher", "Vouchers")
                        .WithMany("HoaDon")
                        .HasForeignKey("VoucherId");

                    b.Navigation("NguoiDung");

                    b.Navigation("Vouchers");
                });

            modelBuilder.Entity("Shop_Models.Entities.HoaDonChiTiet", b =>
                {
                    b.HasOne("Shop_Models.Entities.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("ChiTietSanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop_Models.Entities.HoaDon", "HoaDon")
                        .WithMany()
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("Shop_Models.Entities.PhuongThucTTChiTiet", b =>
                {
                    b.HasOne("Shop_Models.Entities.HoaDon", "HoaDon")
                        .WithMany("PhuongThucTTChiTiet")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop_Models.Entities.PhuongThucThanhToan", "PhuongThucThanhToan")
                        .WithMany("PhuongThucTTChiTiets")
                        .HasForeignKey("PhuongThucThanhToanId");

                    b.Navigation("HoaDon");

                    b.Navigation("PhuongThucThanhToan");
                });

            modelBuilder.Entity("Shop_Models.Entities.SanPhamYeuThich", b =>
                {
                    b.HasOne("Shop_Models.Entities.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany("SanPhamYeuThich")
                        .HasForeignKey("ChiTietSanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop_Models.Entities.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("Shop_Models.Entities.ThongKe", b =>
                {
                    b.HasOne("Shop_Models.Entities.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany("ThongKes")
                        .HasForeignKey("ChiTietSanPhamId");

                    b.HasOne("Shop_Models.Entities.HoaDon", "HoaDon")
                        .WithMany("ThongKes")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("Shop_Models.Entities.ChatLieu", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("Shop_Models.Entities.ChiTietSanPham", b =>
                {
                    b.Navigation("Anhs");

                    b.Navigation("GioHangChiTiets");

                    b.Navigation("HoaDonChiTiets");

                    b.Navigation("SanPhamYeuThich");

                    b.Navigation("ThongKes");
                });

            modelBuilder.Entity("Shop_Models.Entities.GioHang", b =>
                {
                    b.Navigation("GioHangChiTiets");
                });

            modelBuilder.Entity("Shop_Models.Entities.HoaDon", b =>
                {
                    b.Navigation("PhuongThucTTChiTiet");

                    b.Navigation("ThongKes");
                });

            modelBuilder.Entity("Shop_Models.Entities.Khuyenmai", b =>
                {
                    b.Navigation("ChiTietKhuyenMais");
                });

            modelBuilder.Entity("Shop_Models.Entities.Loai", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("Shop_Models.Entities.MauSac", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("Shop_Models.Entities.PhuongThucThanhToan", b =>
                {
                    b.Navigation("PhuongThucTTChiTiets");
                });

            modelBuilder.Entity("Shop_Models.Entities.SanPham", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("Shop_Models.Entities.ThuongHieu", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("Shop_Models.Entities.Voucher", b =>
                {
                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("Shop_Models.Entities.XuatXu", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });
#pragma warning restore 612, 618
        }
    }
}
