// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop_Api.AppDbContext;

#nullable disable

namespace Shop_Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240429154620_gendi")]
    partial class gendi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Shop_Models.Dto.ThongKeViewModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("GiaBan")
                        .HasColumnType("float");

                    b.Property<double>("GiaNhap")
                        .HasColumnType("float");

                    b.Property<string>("MaHoaDon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NamThongKe")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayNhan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayShip")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<int>("NgayThongKe")
                        .HasColumnType("int");

                    b.Property<double>("PhanTramLo")
                        .HasColumnType("float");

                    b.Property<double>("PhanTramLoiNhuan")
                        .HasColumnType("float");

                    b.Property<int>("SoLuongDaBan")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThangThongKe")
                        .HasColumnType("int");

                    b.Property<double>("TienGiam")
                        .HasColumnType("float");

                    b.Property<double>("TienShip")
                        .HasColumnType("float");

                    b.Property<double>("TongTienThongKe")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ThongKeViewModels");
                });

            modelBuilder.Entity("Shop_Models.Entities.Anh", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChiTietSanPhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Guid");

                    b.HasIndex("ChiTietSanPhamId");

                    b.ToTable("Anh");
                });

            modelBuilder.Entity("Shop_Models.Entities.ChatLieu", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaChatLieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChatLieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.ToTable("ChatLieu");
                });

            modelBuilder.Entity("Shop_Models.Entities.ChiTietKhuyenMai", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChiTietSanPhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KhuyenMaiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietSanPhamId");

                    b.HasIndex("KhuyenMaiId");

                    b.ToTable("ChiTietKhuyenMai");
                });

            modelBuilder.Entity("Shop_Models.Entities.ChiTietSanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChatLieuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("GiaBan")
                        .HasColumnType("float");

                    b.Property<double?>("GiaNhap")
                        .HasColumnType("float");

                    b.Property<double?>("GiaThucTe")
                        .HasColumnType("float");

                    b.Property<Guid?>("LoaiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaSanPham")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MauSacId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SanPhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SoLuongDaBan")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<Guid?>("ThuongHieuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThaiKhuyenMai")
                        .HasColumnType("int");

                    b.Property<Guid?>("XuatXuId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ChatLieuId");

                    b.HasIndex("LoaiId");

                    b.HasIndex("MauSacId");

                    b.HasIndex("SanPhamId");

                    b.HasIndex("ThuongHieuId");

                    b.HasIndex("XuatXuId");

                    b.ToTable("ChiTietSanPham");

                    b.HasData(
                        new
                        {
                            Id = new Guid("be7cc791-74a1-4c8f-88b6-99a1dcd35b35"),
                            GiaBan = 727682.0,
                            GiaNhap = 511515.0,
                            GiaThucTe = 725149.0,
                            MaSanPham = "SP4",
                            Mota = "mo ta2",
                            SoLuongDaBan = 2,
                            SoLuongTon = 1,
                            TrangThai = 0,
                            TrangThaiKhuyenMai = 0
                        },
                        new
                        {
                            Id = new Guid("a70ed030-ec61-4b77-8c07-3ceee43fed1b"),
                            GiaBan = 281610.0,
                            GiaNhap = 282760.0,
                            GiaThucTe = 931211.0,
                            MaSanPham = "SP2",
                            Mota = "mo ta4",
                            SoLuongDaBan = 2,
                            SoLuongTon = 9,
                            TrangThai = 1,
                            TrangThaiKhuyenMai = 1
                        },
                        new
                        {
                            Id = new Guid("8c6d452f-1d24-4df9-a379-9a3228c51068"),
                            GiaBan = 229229.0,
                            GiaNhap = 789900.0,
                            GiaThucTe = 221200.0,
                            MaSanPham = "SP3",
                            Mota = "mo ta5",
                            SoLuongDaBan = 4,
                            SoLuongTon = 2,
                            TrangThai = 1,
                            TrangThaiKhuyenMai = 0
                        },
                        new
                        {
                            Id = new Guid("df3c35a5-02e0-46ee-9f88-61157bc16bed"),
                            GiaBan = 684261.0,
                            GiaNhap = 503469.0,
                            GiaThucTe = 353417.0,
                            MaSanPham = "SP1",
                            Mota = "mo ta3",
                            SoLuongDaBan = 5,
                            SoLuongTon = 4,
                            TrangThai = 1,
                            TrangThaiKhuyenMai = 0
                        },
                        new
                        {
                            Id = new Guid("f1ec4cbb-6269-48f9-bbda-cc33fd4e7744"),
                            GiaBan = 435263.0,
                            GiaNhap = 391736.0,
                            GiaThucTe = 142104.0,
                            MaSanPham = "SP1",
                            Mota = "mo ta2",
                            SoLuongDaBan = 2,
                            SoLuongTon = 6,
                            TrangThai = 0,
                            TrangThaiKhuyenMai = 1
                        });
                });

            modelBuilder.Entity("Shop_Models.Entities.ChucVu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaChucVu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TenChucVu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Shop_Models.Entities.GioHang", b =>
                {
                    b.Property<Guid>("IdNguoiDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NguoiDungId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdNguoiDung");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("GioHang");
                });

            modelBuilder.Entity("Shop_Models.Entities.GioHangChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChiTietSanPhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("GiaBan")
                        .HasColumnType("float");

                    b.Property<double>("GiaGoc")
                        .HasColumnType("float");

                    b.Property<Guid>("GioHangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietSanPhamId");

                    b.HasIndex("GioHangId");

                    b.ToTable("GioHangChiTiet");
                });

            modelBuilder.Entity("Shop_Models.Entities.HoaDon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChiGiaoHang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiDoHuy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaHoaDon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayGiaoDuKien")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayNhan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayShip")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NguoiDungId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhachHang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TienGiam")
                        .HasColumnType("float");

                    b.Property<double>("TienShip")
                        .HasColumnType("float");

                    b.Property<double>("TongTien")
                        .HasColumnType("float");

                    b.Property<int>("TrangThaiGiaoHang")
                        .HasColumnType("int");

                    b.Property<int>("TrangThaiThanhToan")
                        .HasColumnType("int");

                    b.Property<Guid?>("VoucherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("NguoiDungId");

                    b.HasIndex("VoucherId");

                    b.ToTable("HoaDon");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dba5b4f7-6354-4ada-b3c8-0fa411601d22"),
                            LiDoHuy = "ly do huy2",
                            MaHoaDon = "HD4",
                            MoTa = "mo ta1",
                            NgayGiaoDuKien = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2784),
                            NgayNhan = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2781),
                            NgayShip = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2781),
                            NgayTao = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2777),
                            NgayThanhToan = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2780),
                            TienGiam = 31987.0,
                            TienShip = 17344.0,
                            TongTien = 46367.0,
                            TrangThaiGiaoHang = 0,
                            TrangThaiThanhToan = 0
                        },
                        new
                        {
                            Id = new Guid("ceab2da8-e87c-422e-ab04-5223b8ad91bb"),
                            LiDoHuy = "ly do huy3",
                            MaHoaDon = "HD4",
                            MoTa = "mo ta4",
                            NgayGiaoDuKien = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2841),
                            NgayNhan = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2839),
                            NgayShip = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2839),
                            NgayTao = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2838),
                            NgayThanhToan = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2838),
                            TienGiam = 26162.0,
                            TienShip = 23548.0,
                            TongTien = 52382.0,
                            TrangThaiGiaoHang = 1,
                            TrangThaiThanhToan = 1
                        },
                        new
                        {
                            Id = new Guid("6adde222-c9f4-404a-a95a-84e3ac0b69b2"),
                            LiDoHuy = "ly do huy1",
                            MaHoaDon = "HD1",
                            MoTa = "mo ta2",
                            NgayGiaoDuKien = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2872),
                            NgayNhan = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2870),
                            NgayShip = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2870),
                            NgayTao = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2869),
                            NgayThanhToan = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2869),
                            TienGiam = 48826.0,
                            TienShip = 34821.0,
                            TongTien = 101652.0,
                            TrangThaiGiaoHang = 1,
                            TrangThaiThanhToan = 0
                        },
                        new
                        {
                            Id = new Guid("cebb1254-a623-4d1e-a4a5-d3123c31feea"),
                            LiDoHuy = "ly do huy5",
                            MaHoaDon = "HD2",
                            MoTa = "mo ta2",
                            NgayGiaoDuKien = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2897),
                            NgayNhan = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2896),
                            NgayShip = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2895),
                            NgayTao = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2894),
                            NgayThanhToan = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2895),
                            TienGiam = 84838.0,
                            TienShip = 33675.0,
                            TongTien = 128045.0,
                            TrangThaiGiaoHang = 0,
                            TrangThaiThanhToan = 1
                        },
                        new
                        {
                            Id = new Guid("0176c2db-08e5-4adf-9c8a-474b67313d11"),
                            LiDoHuy = "ly do huy5",
                            MaHoaDon = "HD3",
                            MoTa = "mo ta3",
                            NgayGiaoDuKien = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2920),
                            NgayNhan = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2918),
                            NgayShip = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2918),
                            NgayTao = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2917),
                            NgayThanhToan = new DateTime(2024, 4, 29, 15, 46, 20, 276, DateTimeKind.Utc).AddTicks(2918),
                            TienGiam = 84569.0,
                            TienShip = 25797.0,
                            TongTien = 81302.0,
                            TrangThaiGiaoHang = 1,
                            TrangThaiThanhToan = 0
                        });
                });

            modelBuilder.Entity("Shop_Models.Entities.HoaDonChiTiet", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChiTietSanPhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("GiaBan")
                        .HasColumnType("float");

                    b.Property<Guid>("HoaDonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.HasIndex("ChiTietSanPhamId");

                    b.HasIndex("HoaDonId");

                    b.ToTable("HoaDonChiTiet");
                });

            modelBuilder.Entity("Shop_Models.Entities.Khuyenmai", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoaiHinhKhuyenMai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaKhuyenMai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MucGiam")
                        .HasColumnType("float");

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenKhuyenMai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Khuyenmai");
                });

            modelBuilder.Entity("Shop_Models.Entities.Loai", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaLoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Loai");
                });

            modelBuilder.Entity("Shop_Models.Entities.MauSac", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaMauSac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMauSac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.ToTable("MauSac");
                });

            modelBuilder.Entity("Shop_Models.Entities.NguoiDung", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool?>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MaNguoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNguoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("VerificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VerificationCodeExpiry")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Shop_Models.Entities.PhuongThucThanhToan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaPTThanhToan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMaPTThanhToan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PhuongThucThanhToan");
                });

            modelBuilder.Entity("Shop_Models.Entities.PhuongThucTTChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HoaDonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PTTToanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PhuongThucThanhToanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("SoTien")
                        .HasColumnType("float");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HoaDonId");

                    b.HasIndex("PhuongThucThanhToanId");

                    b.ToTable("PhuongThucTTChiTiet");
                });

            modelBuilder.Entity("Shop_Models.Entities.SanPham", b =>
                {
                    b.Property<Guid>("IdSanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaSanPham")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSanPham")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdSanPham");

                    b.ToTable("SanPham");

                    b.HasData(
                        new
                        {
                            IdSanPham = new Guid("352270f1-aa82-4b3f-9a4e-e52a94943734"),
                            MaSanPham = "SP5",
                            TenSanPham = "TSP1",
                            TrangThai = 0
                        },
                        new
                        {
                            IdSanPham = new Guid("d4cc7071-f519-428c-9a81-01433c08abd0"),
                            MaSanPham = "SP1",
                            TenSanPham = "TSP5",
                            TrangThai = 0
                        },
                        new
                        {
                            IdSanPham = new Guid("2f36bc6e-638d-4df3-90bd-a3a1c2618877"),
                            MaSanPham = "SP4",
                            TenSanPham = "TSP2",
                            TrangThai = 1
                        },
                        new
                        {
                            IdSanPham = new Guid("b58fa4a8-2c5b-449b-adc7-c0257a42217e"),
                            MaSanPham = "SP5",
                            TenSanPham = "TSP3",
                            TrangThai = 1
                        },
                        new
                        {
                            IdSanPham = new Guid("207647b0-bc76-42f5-bee3-2bdfb896f9b9"),
                            MaSanPham = "SP1",
                            TenSanPham = "TSP5",
                            TrangThai = 0
                        });
                });

            modelBuilder.Entity("Shop_Models.Entities.SanPhamYeuThich", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChiTietSanPhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NguoiDungId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietSanPhamId");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("SanPhamYeuThich");
                });

            modelBuilder.Entity("Shop_Models.Entities.ThongKe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChiTietSanPhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HoaDonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Nam")
                        .HasColumnType("int");

                    b.Property<int>("Ngay")
                        .HasColumnType("int");

                    b.Property<Guid>("SanPhamChiTietId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Thang")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiTietSanPhamId");

                    b.HasIndex("HoaDonId");

                    b.ToTable("ThongKe");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6a12b335-8ffc-44f7-9edc-3305b0d08438"),
                            HoaDonId = new Guid("dba5b4f7-6354-4ada-b3c8-0fa411601d22"),
                            Nam = 2021,
                            Ngay = 7,
                            SanPhamChiTietId = new Guid("be7cc791-74a1-4c8f-88b6-99a1dcd35b35"),
                            Thang = 2,
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("270d0924-b506-474f-8a9c-e0172cb2f2e0"),
                            HoaDonId = new Guid("ceab2da8-e87c-422e-ab04-5223b8ad91bb"),
                            Nam = 2012,
                            Ngay = 18,
                            SanPhamChiTietId = new Guid("a70ed030-ec61-4b77-8c07-3ceee43fed1b"),
                            Thang = 10,
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("c3d6ec62-2881-4c40-8618-60fe54af250f"),
                            HoaDonId = new Guid("6adde222-c9f4-404a-a95a-84e3ac0b69b2"),
                            Nam = 2012,
                            Ngay = 14,
                            SanPhamChiTietId = new Guid("8c6d452f-1d24-4df9-a379-9a3228c51068"),
                            Thang = 10,
                            TrangThai = 0
                        },
                        new
                        {
                            Id = new Guid("f098522d-7421-40be-9bce-0c9f48912b4f"),
                            HoaDonId = new Guid("cebb1254-a623-4d1e-a4a5-d3123c31feea"),
                            Nam = 2011,
                            Ngay = 14,
                            SanPhamChiTietId = new Guid("df3c35a5-02e0-46ee-9f88-61157bc16bed"),
                            Thang = 9,
                            TrangThai = 0
                        },
                        new
                        {
                            Id = new Guid("957786f2-c8a6-46f9-a3bc-7891a943cae8"),
                            HoaDonId = new Guid("0176c2db-08e5-4adf-9c8a-474b67313d11"),
                            Nam = 2002,
                            Ngay = 23,
                            SanPhamChiTietId = new Guid("f1ec4cbb-6269-48f9-bbda-cc33fd4e7744"),
                            Thang = 7,
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("Shop_Models.Entities.ThuongHieu", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaThuongHieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenThuongHieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.ToTable("ThuongHieu");
                });

            modelBuilder.Entity("Shop_Models.Entities.Voucher", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaVoucher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PhanTramGiam")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenVoucher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.ToTable("Voucher");
                });

            modelBuilder.Entity("Shop_Models.Entities.XuatXu", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaXuatXu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenXuatXu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.ToTable("XuatXu");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Shop_Models.Entities.ChucVu", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Shop_Models.Entities.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Shop_Models.Entities.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Shop_Models.Entities.ChucVu", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop_Models.Entities.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Shop_Models.Entities.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shop_Models.Entities.Anh", b =>
                {
                    b.HasOne("Shop_Models.Entities.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany("Anhs")
                        .HasForeignKey("ChiTietSanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");
                });

            modelBuilder.Entity("Shop_Models.Entities.ChiTietKhuyenMai", b =>
                {
                    b.HasOne("Shop_Models.Entities.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany()
                        .HasForeignKey("ChiTietSanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop_Models.Entities.Khuyenmai", "Khuyenmai")
                        .WithMany("ChiTietKhuyenMais")
                        .HasForeignKey("KhuyenMaiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");

                    b.Navigation("Khuyenmai");
                });

            modelBuilder.Entity("Shop_Models.Entities.ChiTietSanPham", b =>
                {
                    b.HasOne("Shop_Models.Entities.ChatLieu", "ChatLieu")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("ChatLieuId");

                    b.HasOne("Shop_Models.Entities.Loai", "Loai")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("LoaiId");

                    b.HasOne("Shop_Models.Entities.MauSac", "MauSac")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("MauSacId");

                    b.HasOne("Shop_Models.Entities.SanPham", "SanPham")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("SanPhamId");

                    b.HasOne("Shop_Models.Entities.ThuongHieu", "ThuongHieu")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("ThuongHieuId");

                    b.HasOne("Shop_Models.Entities.XuatXu", "XuatXu")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("XuatXuId");

                    b.Navigation("ChatLieu");

                    b.Navigation("Loai");

                    b.Navigation("MauSac");

                    b.Navigation("SanPham");

                    b.Navigation("ThuongHieu");

                    b.Navigation("XuatXu");
                });

            modelBuilder.Entity("Shop_Models.Entities.GioHang", b =>
                {
                    b.HasOne("Shop_Models.Entities.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("NguoiDungId");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("Shop_Models.Entities.GioHangChiTiet", b =>
                {
                    b.HasOne("Shop_Models.Entities.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("ChiTietSanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop_Models.Entities.GioHang", "GioHang")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("GioHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");

                    b.Navigation("GioHang");
                });

            modelBuilder.Entity("Shop_Models.Entities.HoaDon", b =>
                {
                    b.HasOne("Shop_Models.Entities.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("NguoiDungId");

                    b.HasOne("Shop_Models.Entities.Voucher", "Vouchers")
                        .WithMany("HoaDon")
                        .HasForeignKey("VoucherId");

                    b.Navigation("NguoiDung");

                    b.Navigation("Vouchers");
                });

            modelBuilder.Entity("Shop_Models.Entities.HoaDonChiTiet", b =>
                {
                    b.HasOne("Shop_Models.Entities.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("ChiTietSanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop_Models.Entities.HoaDon", "HoaDon")
                        .WithMany()
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("Shop_Models.Entities.PhuongThucTTChiTiet", b =>
                {
                    b.HasOne("Shop_Models.Entities.HoaDon", "HoaDon")
                        .WithMany("PhuongThucTTChiTiet")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop_Models.Entities.PhuongThucThanhToan", "PhuongThucThanhToan")
                        .WithMany("PhuongThucTTChiTiets")
                        .HasForeignKey("PhuongThucThanhToanId");

                    b.Navigation("HoaDon");

                    b.Navigation("PhuongThucThanhToan");
                });

            modelBuilder.Entity("Shop_Models.Entities.SanPhamYeuThich", b =>
                {
                    b.HasOne("Shop_Models.Entities.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany("SanPhamYeuThich")
                        .HasForeignKey("ChiTietSanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop_Models.Entities.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("Shop_Models.Entities.ThongKe", b =>
                {
                    b.HasOne("Shop_Models.Entities.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany("ThongKes")
                        .HasForeignKey("ChiTietSanPhamId");

                    b.HasOne("Shop_Models.Entities.HoaDon", "HoaDon")
                        .WithMany("ThongKes")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("Shop_Models.Entities.ChatLieu", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("Shop_Models.Entities.ChiTietSanPham", b =>
                {
                    b.Navigation("Anhs");

                    b.Navigation("GioHangChiTiets");

                    b.Navigation("HoaDonChiTiets");

                    b.Navigation("SanPhamYeuThich");

                    b.Navigation("ThongKes");
                });

            modelBuilder.Entity("Shop_Models.Entities.GioHang", b =>
                {
                    b.Navigation("GioHangChiTiets");
                });

            modelBuilder.Entity("Shop_Models.Entities.HoaDon", b =>
                {
                    b.Navigation("PhuongThucTTChiTiet");

                    b.Navigation("ThongKes");
                });

            modelBuilder.Entity("Shop_Models.Entities.Khuyenmai", b =>
                {
                    b.Navigation("ChiTietKhuyenMais");
                });

            modelBuilder.Entity("Shop_Models.Entities.Loai", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("Shop_Models.Entities.MauSac", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("Shop_Models.Entities.PhuongThucThanhToan", b =>
                {
                    b.Navigation("PhuongThucTTChiTiets");
                });

            modelBuilder.Entity("Shop_Models.Entities.SanPham", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("Shop_Models.Entities.ThuongHieu", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("Shop_Models.Entities.Voucher", b =>
                {
                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("Shop_Models.Entities.XuatXu", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });
#pragma warning restore 612, 618
        }
    }
}
