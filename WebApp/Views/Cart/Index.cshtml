@using Shop_Models.Dto;
@using Shop_Models.Entities;
@model IEnumerable<GioHangChiTietViewModel>
@{
    int stt = 0;
    double thanhTien = 0;
    double tongTien = 0;
    int soluongsanpham = 0;
    string username = ViewContext.HttpContext.Session.GetString("username");
}

<!-- Start Banner Area -->
<section class="banner-area organic-breadcrumb">
    <div class="container">
        <div class="breadcrumb-banner d-flex flex-wrap align-items-center justify-content-end">
            <div class="col-first">
                <h1>Shopping Cart</h1>
                <nav class="d-flex align-items-center">
                    <a href="index.html">Home<span class="lnr lnr-arrow-right"></span></a>
                    <a href="category.html">Cart</a>
                </nav>
            </div>
        </div>
    </div>
</section>

<!-- End Banner Area -->
<div class="carts">
    @await Html.PartialAsync("_CartPartialViewAsync")
</div>



<style>
    .empty-cart-message {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 20px;
        background-color: #f5f5f5;
        border: 1px solid #ddd;
        border-radius: 5px;
        text-align: center;
    }

        .empty-cart-message span {
            margin-bottom: 10px;
            color: #555;
        }

    .shop-now-button {
        display: inline-block;
        padding: 10px 20px;
        background-color: #007bff;
        color: #fff;
        text-decoration: none;
        border-radius: 5px;
    }

        .shop-now-button:hover {
            background-color: #0056b3;
        }

</style>

<script>
    // function incrementQuantity(button) {
    //     var input = $(button).siblings('.qty')[0];
    //     var value = parseInt(input.value, 10);
    //     if (!isNaN(value)) {
    //         input.value = value + 1;
    //     }
    // }

    // function decrementQuantity(button) {
    //     var input = $(button).siblings('.qty')[0];
    //     var value = parseInt(input.value, 10);
    //     if (!isNaN(value) && value > 0) {
    //         input.value = value - 1;
    //     }
    // }


    // const maxQuantity = parseInt("@soluongsanpham", 10); // Chuyển đổi thành số nguyên
    // const maxQuantity2 = parseInt("@soluongsanpham", 10); // Chuyển đổi thành số nguyên
    // console.log("maxQuantity: ", maxQuantity);
    // console.log(typeof maxQuantity)

    function increaseQuantity(button) {
        var input = $(button).siblings('.qty')[0];
        var codeProduct = $(input).data('product-detail');
        var value = parseInt(input.value, 10);

        var inputsoLuongSPTon = $(button).siblings('#soLuongSPTon')[0]; // Sử dụng #soLuongSPTon để chọn phần tử có id là soLuongSPTon
        var maxQuantity3 = parseInt($(inputsoLuongSPTon).data('product-sl'), 10); // Lấy giá trị số lượng sản phẩm tồn từ thuộc tính data-product-sl

        console.log(codeProduct);
        console.log(maxQuantity3);
        var inputIdCartDetail = $(button).closest('.product_count').find('#increase')[0];
        var idCartDetail = $(inputIdCartDetail).data('cartdetail-id');
        console.log(idCartDetail);

        console.log(idCartDetail);

        if (!isNaN(value)) {
            if (value < maxQuantity3) {
                input.value = value + 1;
                var codeProductDetail = codeProduct;
                $.ajax({
                    url: '/Cart/IncreaseQuantity',
                    type: 'GET',
                    data: { codeProductDetail2: codeProductDetail, idCartDetail: idCartDetail },
                    success: function (response) {
                        $("#container").load(location.href + " #container");
                        updateCart();
                        console.log('Quantity increased successfully');
                    },
                    error: function (xhr, status, error) {
                        console.error('Error increasing quantity:', error);
                    }
                });
            } else {
                debugger;
                console.log('dừng lại nhanh');
                input.value = maxQuantity3;
            }
        }
    }


    function validateQuantity(input) {
        var codeProduct = $(input).data('product-detail');
        var value = parseInt(input.value, 10);

        var inputsoLuongSPTon = $(input).siblings('#soLuongSPTon')[0];
        var maxQuantity3 = parseInt($(inputsoLuongSPTon).data('product-sl'), 10);

        // var inputIdCartDetail = $(input).siblings('.qty')[0];
        var idCartDetail = $(input).data('cartdetail-id');

        var maxQuantity = parseInt(input.getAttribute('max'), 10);
        var quantity = parseInt(input.value, 10);
        debugger
        if (!isNaN(quantity)) {
            if (quantity > maxQuantity) {
                alert('Số lượng nhập vào vượt quá số lượng bán.');
                input.value = 1;
                updateCart();
            } else if (quantity <= 0) {
                alert('Số lượng nhập vào phải lớn hơn 0.');
                input.value = 1;
                updateCart();
            }
            else if (quantity <= maxQuantity && quantity > 0) {
                $.ajax({
                    url: '/Cart/updateSoLuong',
                    type: 'GET',
                    data: { codeProductDetail2: codeProduct, idCartDetail: idCartDetail, soLuong: quantity },
                    success: function (response) {
                        updateCart();
                        console.log('Quantity increased successfully');
                    },
                    error: function (xhr, status, error) {
                        console.error('Error increasing quantity:', error);
                    }
                });
            }
        } else {
            alert('Vui lòng nhập một số hợp lệ.');
            input.value = 1;
            updateCart();
        }
    }



    // function decreaseQuantity(button) {

    //     var input = $(button).siblings('.qty')[0];
    //     var codeProduct = $(input).data('product-detail');
    //     var value = parseInt(input.value, 10);



    //     if (!isNaN(value) && value > 0) {
    //         input.value = value - 1;
    //     }
    // }



    function decreaseQuantity(button) {
        var input = $(button).siblings('.qty')[0];
        var codeProduct = $(input).data('product-detail');
        var value = parseInt(input.value, 10);

        var inputsoLuongSPTon = $(button).siblings('#soLuongSPTon')[0]; // Sử dụng #soLuongSPTon để chọn phần tử có id là soLuongSPTon
        var maxQuantity3 = parseInt($(inputsoLuongSPTon).data('product-sl'), 10); // Lấy giá trị số lượng sản phẩm tồn từ thuộc tính data-product-sl

        console.log(maxQuantity3);
        var inputIdCartDetail = $(button).closest('.product_count').find('#increase')[0];
        var idCartDetail = $(inputIdCartDetail).data('cartdetail-id');

        console.log(codeProduct); // Kiểm tra xem codeProduct có được lấy chính xác không
        console.log(maxQuantity3); // Kiểm tra xem maxQuantity3 có được lấy chính xác không

        if (!isNaN(value)) {
            if (value > 1) {
                input.value = value - 1;
                var codeProductDetail = codeProduct;
                $.ajax({
                    url: '/Cart/decreaseQuantity',
                    type: 'GET',
                    data: { codeProductDetail2: codeProductDetail, idCartDetail: idCartDetail },
                    success: function (response) {
                        // Sau khi giảm số lượng, cập nhật lại nội dung của div.carts
                        updateCart();
                        console.log('Quantity decrease successfully');
                        console.log(response);
                    },
                    error: function (xhr, status, error) {
                        console.error('Error decrease quantity:', error);
                    }
                });
            } else {
                debugger;
                console.log('dừng lại nhanh');
                input.value = 1;

                // $.ajax({
                //     url: '/Cart/delete',
                //     type: 'GET',
                //     data: { idCartDetail: idCartDetail },
                //     success: function (response) {
                //         // Sau khi giảm số lượng, cập nhật lại nội dung của div.carts
                //         updateCart();
                //         console.log('Quantity decrease successfully');
                //         console.log(response);
                //     },
                //     error: function (xhr, status, error) {
                //         console.error('Error decrease quantity:', error);
                //     }
                // });


            }
        }
    }

    // Hàm cập nhật lại nội dung của div.carts
    function updateCart() {
        $.ajax({
            url: '/Cart/CartPartialView', // Đường dẫn đến action trong Controller để trả về PartialView
            type: 'GET',
            success: function (response) {

                $('.carts').html(response); // Cập nhật nội dung của div.carts với nội dung nhận được từ máy chủ
            },
            error: function (xhr, status, error) {
                console.error('Error updating cart:', error);
            }
        });
    }


    function DeleteCart(button) {
        debugger
        var idCartDetail_buuton = $(button).siblings('.delete')[0];
        var idCartDetail = $(button).data('cartdetail-id');

        


        Swal.fire({
            title: 'Thông báo!',
            text: 'Bạn có muốn xóa mặt hàng này khỏi giỏ hàng của bạn ?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Đồng ý',
            cancelButtonText: 'Hủy bỏ'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/Cart/delete',
                    type: 'GET',
                    data: { idCartDetail: idCartDetail },
                    success: function (response) {
                        // Sau khi giảm số lượng, cập nhật lại nội dung của div.carts
                        updateCart();
                        console.log('Quantity decrease successfully');
                        console.log(response);
                    },
                    error: function (xhr, status, error) {
                        console.error('Error decrease quantity:', error);
                    }
                });
            } else if (result.dismiss === Swal.DismissReason.cancel) {
                Swal.fire('Đã hủy bỏ', 'Hành động không được thực hiện.', 'error').then(() => {
                    location.reload();
                });
            }
        });

    }


    $(document).ready(function () {
        // Gắn sự kiện click cho phần tử cha của .update-cart-link (tức là .carts)
        $('.carts').on('click', '.update-cart-link', function (event) {
            event.preventDefault(); // Ngăn chặn hành động mặc định của thẻ a
            updateCart(); // Gọi hàm cập nhật lại nội dung của div.carts
        });
    });


    // // Sự kiện click cho nút có id là "checkz"
    // document.getElementById("checkz").addEventListener("click", function () {
    //     // Thực hiện hành động khi nút được ấn
    //     alert("Nút đã được ấn!");
    // });

    function validateForm(event) {
        debugger
        // Lấy ra các radio button
        // var option1 = document.getElementById("option1");
        var option2 = document.getElementById("option2");
        var option3 = document.getElementById("option3");
        var option4 = document.getElementById("option4");

        // Lấy ra div kết quả
        var resultDiv = document.getElementById("result");

        // Kiểm tra radio button nào đã được chọn
        if (option2.checked) {
            resultDiv.innerHTML = text;
        } else if (option3.checked) {
            resultDiv.innerHTML = text;
        } else if (option4.checked) {
            resultDiv.innerHTML = text;
        } else {
            resultDiv.innerHTML = "Vui lòng chọn một phương thức thanh toán."; event.preventDefault();
            return false; // Ensure the form is not submitted

        }

        // // Kiểm tra radio button nào đã được chọn
        // if (option1.checked) {
        //     resultDiv.innerHTML = text;
        // } else if (option2.checked) {
        //     resultDiv.innerHTML = text;
        // } else if (option3.checked) {
        //     resultDiv.innerHTML = text;
        // } else {
        //     resultDiv.innerHTML = "Vui lòng chọn một phương thức thanh toán."; event.preventDefault();
        //     return false; // Ensure the form is not submitted

        // }
    };


    function displayText(text) {
        document.getElementById("result").innerHTML = "Bạn đã chọn: " + text;
    }

    function setPaymentMethod(method) {
        document.getElementById("paymentMethod").value = method;
        document.getElementById("MaPTTT").value = method;
    }



</script>

@* <!--tính phí ship-->
<script>
    $(document).ready(function () {
        debugger
        const apiUrl = 'https://online-gateway.ghn.vn/shiip/public-api/master-data/province';
        const token = '21040e7e-154d-11ef-80f1-d288e53168c3';

        axios.get(apiUrl, {
            headers: {
                'Token': token
            }
        })
            .then(response => {
                var selectElement = $('#city');
                selectElement.empty();

                selectElement.append($('<option>').val('').text('Chọn thành phố'));

                $.each(response.data.data, function (index, item) {
                    selectElement.append($('<option>').val(item.ProvinceID).text(item.ProvinceName));
                });

                selectElement.val(selectElement.val()).trigger('change');
            })
            .catch(error => {
                console.error(error);
            });
    });

    $(document).ready(function () {
        $('#city').on('change', function () {
            if ($('#city').val() === null) {
                var selectElement = $('#district');
                selectElement.empty();
                selectElement.val('').trigger('change');
                selectElement.append($('<option>').val('').text('Chọn huyện'));
            }
            const apiUrl = 'https://online-gateway.ghn.vn/shiip/public-api/master-data/district';
            const token = '21040e7e-154d-11ef-80f1-d288e53168c3';
            axios.get(apiUrl, {
                headers: {
                    'Token': token
                },
                params: {
                    province_id: $('#city').val()
                }
            })
                .then(response => {
                    console.log(response.data.data);
                    var selectElement = $('#district');
                    selectElement.empty();
                    selectElement.val('').trigger('change');
                    selectElement.append($('<option>').val('').text('Chọn huyện'));
                    $.each(response.data.data, function (index, item) {
                        selectElement.append($('<option>').val(item.DistrictID).text(item.DistrictName));
                    });
                    selectElement.val(selectElement.val()).trigger('change');
                })
                .catch(error => {
                    console.error(error);
                });
        });
    });

    $(document).ready(function () {
        $('#district').on('change', function () {
            if ($('#district').val() === null) {
                var selectElement = $('#wards');
                selectElement.empty();
                selectElement.val('').trigger('change');
                selectElement.append($('<option>').val('').text('Chọn phường/xã'));
            }
            const apiUrl = 'https://online-gateway.ghn.vn/shiip/public-api/master-data/ward';
            const token = '21040e7e-154d-11ef-80f1-d288e53168c3';
            axios.get(apiUrl, {
                headers: {
                    'Token': token
                },
                params: {
                    district_id: $('#district').val()
                }
            })
                .then(response => {
                    console.log(response.data.data);
                    var selectElement = $('#wards');
                    selectElement.empty();
                    selectElement.val('').trigger('change');
                    selectElement.append($('<option>').val('').text('Chọn phường/xã'));
                    $.each(response.data.data, function (index, item) {
                        selectElement.append($('<option>').val(item.WardCode).text(item.WardName));
                    });
                    selectElement.val(selectElement.val()).trigger('change');
                })
                .catch(error => {
                    console.error(error);
                });
        });
    });

    $(document).ready(function () {
        $('#wards').on('change', function () {
            var inputs = document.getElementsByClassName('input-counter__text');
            var sum = 0;
            for (var i = 0; i < inputs.length - 1; i++) {
                var inputValue = parseInt(inputs[i].value);
                if (!isNaN(inputValue)) {
                    sum += inputValue;
                }
            }

            var soLuongDonHang = sum;
            var length = 20; // Giá trị mặc định cho chiều dài
            var width = 15; // Giá trị mặc định cho chiều rộng
            var height = 20;
            var weight = parseInt((length * width * height) / 5000);
            if ($('#wards').val() != null) {
                const apiUrl = 'https://online-gateway.ghn.vn/shiip/public-api/v2/shipping-order/fee';
                const token = '21040e7e-154d-11ef-80f1-d288e53168c3';
                const shop_id = 705899;
                axios.get(apiUrl, {
                    headers: {
                        'Token': token,
                        'shop_id': shop_id
                    },
                    params: {
                        service_type_id: 2,
                        insurance_value: $('#tamtinh').text().replace(/\D/g, ''),
                        coupon: null,
                        to_ward_code: $('#wards').val(),
                        to_district_id: $('#district').val(),
                        from_district_id: 3440,
                        weight: weight,
                        length: length,
                        width: width,
                        height: height
                    }
                })
                    .then(response => {

                        //lưu tiền ship vào localstorage
                        localStorage.setItem('phiship', response.data.data.service_fee);
                        //gán tiền ship vào id phiship
                        $('#phiship').text(parseInt(response.data.data.service_fee).toLocaleString("vi-VN").replace(/\./g, ',') + "đ");
                        // $('#divShippingFee1').val(response.data.data.service_fee);

                        // lấy ra tổng tiền của sản phẩm có trong giỏ hàng
                        var tongtienSanPham = parseInt(document.getElementById("tamtinh").innerText.replace("đ", "").replace(/\,/g, "").replace(/\./g, "").trim());

                        var totalAmountElement = document.getElementById("tongtien");

                        var tongTien = tongtienSanPham + response.data.data.service_fee;

                        // Hiển thị tổng tiền
                        totalAmountElement.innerText = tongTien.toLocaleString("vi-VN").replace(/\./g, ',') + "đ";
                        totalAmountElement.value = tongTien.toString();
                    })
                    .catch(error => {
                        console.error(error);
                    });
            }
        });
    });
</script> *@

